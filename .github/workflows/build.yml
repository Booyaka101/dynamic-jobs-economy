name: Build DynamicJobsEconomy

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    name: Build (matrix)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        profile: [ default, spigot-lite, spigot-ultra, spigot-ultra-mysql, spigot-linux-sqlite ]
    env:
      # Optional: set to a byte value (e.g., 4000000) to enforce a max artifact size per job
      MAX_JAR_SIZE: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build with Maven (unit tests)
        shell: bash
        run: |
          if [ "${{ matrix.profile }}" = "default" ]; then
            timeout 30m mvn -B -DskipTests=false package
          else
            timeout 30m mvn -B -P ${{ matrix.profile }} -DskipTests=false package
          fi

      - name: Record JAR size
        id: size
        shell: bash
        run: |
          case "${{ matrix.profile }}" in
            default|spigot-ultra-mysql|spigot-linux-sqlite)
              PATTERN="target/DynamicJobsEconomy-*.jar"
              ;;
            spigot-ultra)
              PATTERN="target/DynamicJobsEconomy-*-spigot-ultra.jar"
              ;;
            spigot-lite)
              PATTERN="target/DynamicJobsEconomy-*-spigot-lite.jar"
              ;;
          esac
          # Prefer classifier-specific jar when applicable and avoid original- backup jars
          JAR=$(ls -1 $PATTERN 2>/dev/null | grep -v "/original-" | head -n1)
          if [ -z "$JAR" ]; then
            echo "No JAR found in target/"
            exit 1
          fi
          SIZE=$(stat -c%s "$JAR")
          echo "Built: $JAR ($SIZE bytes)"
          echo "jar_path=$JAR" >> $GITHUB_OUTPUT
          echo "jar_size=$SIZE" >> $GITHUB_OUTPUT

      - name: Enforce size guard
        if: env.MAX_JAR_SIZE != ''
        shell: bash
        run: |
          if [ "${{ steps.size.outputs.jar_size }}" -gt "${{ env.MAX_JAR_SIZE }}" ]; then
            echo "Artifact too large: ${{ steps.size.outputs.jar_size }} > ${{ env.MAX_JAR_SIZE }}"
            exit 1
          fi

      - name: Generate SHA-256 checksum
        id: checksum
        shell: bash
        run: |
          JAR="${{ steps.size.outputs.jar_path }}"
          CHECKSUM=$(sha256sum "$JAR" | awk '{print $1}')
          echo "$CHECKSUM  $(basename "$JAR")" | tee "${JAR}.sha256"
          echo "sha256=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "checksum_path=${JAR}.sha256" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DynamicJobsEconomy-jar-${{ matrix.profile }}
          path: |
            ${{ steps.size.outputs.jar_path }}
            ${{ steps.checksum.outputs.checksum_path }}
          if-no-files-found: error

  integration-tests:
    name: Integration Tests (Testcontainers)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Run database integration tests (Testcontainers)
        run: timeout 40m mvn -B -P integration-tests -DskipTests=false test
